name: Build WAR

on: 
  push:
    branches: 
      - master

jobs:
  BuildWAR:
    name: Build WAR
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: copy WAR to root/
      run: |
        cp target/*.war ./ROOT.war
        cp schemas/api.yaml swagger-dist/api.yaml

    - name: Create Release
      if: contains(github.ref, 'release')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: master
        release_name: master
        draft: false
        prerelease: true
    - name: Upload Release Asset
      if: contains(github.ref, 'release')
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./ROOT.war
        asset_name: ROOT.war
        asset_content_type: application/zip

    - name: Make docker AMD64
      run: |
        ls -la
        docker build -t majortwip/escapeconnect:latest .
        
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: majortwip/escapeconnect
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      

    - name: Make Container ARM32v7
      uses: uraimo/run-on-arch-action@v1.0.5 
      id: runcmd
      with:
        architecture: armv7
        distribution: ubuntu18.04
        run: |
          uname -a
          apt-get update && apt-get install curl -y
          curl -sSL https://get.docker.com/ | sh
          docker build -t majortwip/escapeconnect:arm32v7 -f Dockerfile-arm32v7 .
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: majortwip/escapeconnect
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
